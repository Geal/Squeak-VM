# Makefile.install for Unix Squeak using VMMaker		-*- makefile -*-
# 
# Author: ian.piumarta@inria.fr
# 
# Last edited: 2003-08-20 17:53:18 by piumarta on emilia.inria.fr

DOCFILES	= COPYING COPYRIGHT LICENSE \
		  README.Contributing README.Keyboard README.Sound

install : install-squeak install-plugins install-doc $(install_nps)

uninstall : uninstall-squeak uninstall-plugins uninstall-doc $(uninstall_nps)

# squeak

install-squeak : $(squeak)
	$(MKINSTALLDIRS) $(ROOT)$(plgdir)
	$(INSTALL_PROG) $(squeak) $(ROOT)$(plgdir)
	$(MKINSTALLDIRS) $(ROOT)$(bindir)
	( path=`$(cfgdir)/relpath $(bindir) $(plgdir)`; \
	  cd $(ROOT)$(bindir); \
	  rm -f $(squeak); \
	  $(LN_S) $$path/$(squeak) .; )

uninstall-squeak : .force
	@$(UNINSTALL) $(ROOT)$(plgdir) $(squeak)
	@$(UNINSTALL) $(ROOT)$(bindir) $(squeak)

# plugins

install-plugins : plugins
	$(MKINSTALLDIRS) $(ROOT)$(plgdir)
	@list='$(PLUGINS_LA)'; for p in $$list; do \
	  if test -f */$$p; then \
	    echo "$(LIBTOOL) --mode=install $(INSTALL) $$p $(ROOT)$(plgdir)/$$p"; \
	    $(LIBTOOL) --mode=install $(INSTALL) */$$p $(ROOT)$(plgdir)/$$p; \
	  else :; fi; \
	done

uninstall-plugins : .force
	@list='$(PLUGINS_LA)'; for p in $$list; do \
	  if test -f $(ROOT)/$(plgdir)/$$p; then \
	    echo "$(LIBTOOL) --mode=uninstall rm -f $(ROOT)$(plgdir)/$$p"; \
	    $(LIBTOOL) --mode=uninstall rm -f $(ROOT)$(plgdir)/$$p; \
	  else :; fi; \
	done
	@$(UNINSTALL) $(ROOT)$(plgdir)

# doc

install-doc : squeak.1
	$(MKINSTALLDIRS) $(ROOT)$(docdir)
	@list='$(DOCFILES)'; for f in $$list; do \
	  echo $(INSTALL_DATA) $(topdir)/platforms/unix/doc/$$f $(ROOT)$(docdir); \
	  $(INSTALL_DATA) $(topdir)/platforms/unix/doc/$$f $(ROOT)$(docdir); \
	done
	$(MKINSTALLDIRS) $(ROOT)$(mandir)/man1
	$(INSTALL_DATA) squeak.1 $(ROOT)$(mandir)/man1
	rm -f $(ROOT)$(mandir)/man1/inisqueak.1
	$(LN_S) squeak.1 $(ROOT)$(mandir)/man1/inisqueak.1

uninstall-doc :
	@$(UNINSTALL) $(ROOT)$(docdir) $(DOCFILES)
	@$(UNINSTALL) $(ROOT)$(mandir)/man1 squeak.1 inisqueak.1

# image

install-image : inisqueak $(topdir)/Squeak$(SQ_VERSION).image.gz $(topdir)/Squeak$(SQ_VERSION).changes.gz
	$(MKINSTALLDIRS) $(ROOT)$(imgdir)
	$(INSTALL_DATA) $(topdir)/Squeak$(SQ_VERSION).image.gz $(ROOT)$(imgdir)
	$(INSTALL_DATA) $(topdir)/Squeak$(SQ_VERSION).changes.gz $(ROOT)$(imgdir)
	$(INSTALL_PROG) inisqueak $(ROOT)$(imgdir)
	$(MKINSTALLDIRS) $(ROOT)$(bindir)
	( path=`$(cfgdir)/relpath $(bindir) $(imgdir)`; \
	  cd $(ROOT)$(bindir); \
	  rm -f inisqueak; \
	  $(LN_S) $$path/inisqueak .; )

uninstall-image :
	@$(UNINSTALL) $(ROOT)$(plgdir) Squeak$(SQ_VERSION).image.gz
	@$(UNINSTALL) $(ROOT)$(plgdir) Squeak$(SQ_VERSION).changes.gz
	@$(UNINSTALL) $(ROOT)$(plgdir) inisqueak

# sources

install-sources :
	$(MKINSTALLDIRS) $(ROOT)$(imgdir)
	$(INSTALL_DATA) $(topdir)/SqueakV$(SQ_MAJOR).sources $(ROOT)$(imgdir)

uninstall-sources :
	@$(UNINSTALL) $(ROOT)$(imgdir) SqueakV$(SQ_MAJOR).sources

# npsqueak

install-npsqueak : npsqueak .force
	$(SHELL) -ec 'cd nps; $(MAKE) install VM_VERSION=$(VM_VERSION) SQ_DIR=$(ROOT)$(imgdir) imgdir=$(imgdir)'

uninstall-npsqueak : npsqueak .force
	$(SHELL) -ec 'cd nps; $(MAKE) uninstall VM_VERSION=$(VM_VERSION) SQ_DIR=$(ROOT)$(imgdir) imgdir=$(imgdir)'
