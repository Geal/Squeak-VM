SET (OS_TYPE \"win32\")
SET (CMAKE_SYSTEM_NAME "Windows")
SET (CMAKE_C_COMPILER i586-mingw32msvc-gcc)
SET (CMAKE_CXX_COMPILER i586-mingw32msvc-g++)

SET(CMAKE_FIND_ROOT_PATH /usr/i586-mingw32msvc)
SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

CONFIG_DEFINE (OS_TYPE)

STRING (REGEX REPLACE "(.*)\\.(.*)\\.(.*)-(.*)" "\\1" major   ${version})
STRING (REGEX REPLACE "(.*)\\.(.*)\\.(.*)-(.*)" "\\2" minor   ${version})
STRING (REGEX REPLACE "(.*)\\.(.*)\\.(.*)-(.*)" "\\3" patch   ${version})
STRING (REGEX REPLACE "(.*)\\.(.*)\\.(.*)-(.*)" "\\4" release ${version})


#IF (CMAKE_COMPILER_IS_GNUCC)
#  SET (interp gnu-interp)
#ELSE ()
  SET (interp interp)
#  MESSAGE ("!! Cannot optimise interpreter performance for GCC")
#ENDIF (CMAKE_COMPILER_IS_GNUCC)

INCLUDE (TestBigEndian)
INCLUDE (CheckIncludeFile)
INCLUDE (CheckLibraryExists)
INCLUDE (CheckTypeSize)
INCLUDE (CheckFunctionExists)
INCLUDE (CheckVariableExists)
INCLUDE (CheckStructHasMember)
INCLUDE (FindPkgConfig)

FIND_LIBRARY (VERSION_LIBRARIES   VERSION      /usr/i586-mingw32msvc/lib)
FIND_LIBRARY (GDI32_LIBRARIES   GDI32      /usr/i586-mingw32msvc/lib)
PLUGIN_REQUIRE_LIBRARY (VERSION version)
PLUGIN_REQUIRE_LIBRARY (GDI32 gdi32)

TEST_BIG_ENDIAN (WORDS_BIGENDIAN)
IF (WORDS_BIGENDIAN)
  SET (MSB_FIRST 1)
ELSE ()
  SET (LSB_FIRST 1)
ENDIF ()

CONFIG_DEFINE (WORDS_BIGENDIAN)
CONFIG_DEFINE (LSB_FIRST)
CONFIG_DEFINE (MSB_FIRST)

CHECK_FUNCTION_EXISTS (atexit		HAVE_ATEXIT)
CHECK_FUNCTION_EXISTS (on_exit		HAVE_ON_EXIT)

IF (HAVE_ATEXIT)
  SET (AT_EXIT atexit)
ELSEIF (HAVE_ON_EXIT)
  SET (AT_EXIT on_exit)
ENDIF ()

CONFIG_DEFINE (AT_EXIT)

# sqMemoryAccess.h

CHECK_INCLUDE_FILE (interp.h HAVE_INTERP_H -I${src}/vm)

CONFIG_DEFINE (HAVE_INTERP_H)

CHECK_TYPE_SIZE (int SIZEOF_INT)
CHECK_TYPE_SIZE (long SIZEOF_LONG)
CHECK_TYPE_SIZE ("long long" SIZEOF_LONG_LONG)
CHECK_TYPE_SIZE ("void *" SIZEOF_VOID_P)

CONFIG_DEFINE (SIZEOF_INT)
CONFIG_DEFINE (SIZEOF_LONG)
CONFIG_DEFINE (SIZEOF_LONG_LONG)
CONFIG_DEFINE (SIZEOF_VOID_P)

TRY_RUN (DOUBLE_WORD_ALIGNMENT tmp ${bld} ${config}/testDoubleWordAlignment.c)
TRY_RUN (DOUBLE_WORD_ORDER tmp ${bld} ${config}/testDoubleWordOrder.c)

CONFIG_DEFINE (DOUBLE_WORD_ALIGNMENT)
CONFIG_DEFINE (DOUBLE_WORD_ORDER)

# sqPlatformSpecific.h

CHECK_INCLUDE_FILE (alloca.h HAVE_ALLOCA_H)

CONFIG_DEFINE (HAVE_ALLOCA_H)

IF (HAVE_ALLOCA_H)
  SET (HAVE_ALLOCA 1)
ELSE ()
  CHECK_FUNCTION_EXISTS (alloca HAVE_ALLOCA)
ENDIF ()

CONFIG_DEFINE (HAVE_ALLOCA)

# aio.c

CHECK_INCLUDE_FILE (sys/time.h HAVE_SYS_TIME_H)
CHECK_INCLUDE_FILE (sys/filio.h HAVE_SYS_FILIO_H)

CONFIG_DEFINE (HAVE_SYS_TIME_H)
CONFIG_DEFINE (HAVE_SYS_FILIO_H)

CHECK_FUNCTION_EXISTS (nanosleep HAVE_NANOSLEEP)

CONFIG_DEFINE (HAVE_NANOSLEEP)

# sqUnixCharConv.c

CHECK_INCLUDE_FILE (iconv.h HAVE_ICONV_H)
CHECK_INCLUDE_FILE (langinfo.h HAVE_LANGINFO_H)

IF (HAVE_LANGINFO_H)
  TRY_COMPILE (HAVE_LANGINFO_CODESET ${bld} ${config}/testLanginfoCodeset.c)
ENDIF (HAVE_LANGINFO_H)

CONFIG_DEFINE (HAVE_ICONV_H)
CONFIG_DEFINE (HAVE_LANGINFO_CODESET)

CHECK_FUNCTION_EXISTS (_dyld_present HAVE_DYLD)
CHECK_FUNCTION_EXISTS (snprintf HAVE_SNPRINTF)
CHECK_FUNCTION_EXISTS (__snprintf HAVE___SNPRINTF)

CONFIG_DEFINE (HAVE_DLFCN_H)
CONFIG_DEFINE (HAVE_DLOPEN)
CONFIG_DEFINE (HAVE_DYLD)
CONFIG_DEFINE (HAVE_SNPRINTF)
CONFIG_DEFINE (HAVE___SNPRINTF)



SET (VM_MODULE_PREFIX \"${CMAKE_SHARED_MODULE_PREFIX}\")

CONFIG_DEFINE (VM_MODULE_PREFIX)

SET (VM_BUILD_STRING "\"Windows built on \"__DATE__ \" \"__TIME__\" Compiler: \"__VERSION__")

CONFIG_DEFINE (VM_BUILD_STRING)

SET (VM_LIBDIR "\"${prefix}/${plgdir}\"")

CONFIG_DEFINE (VM_LIBDIR)

SET (VM_HOST        \"${VM_HOST}\")
SET (VM_HOST_CPU    \"${VM_HOST_CPU}\")
SET (VM_HOST_VENDOR \"${VM_HOST_VENDOR}\")
SET (VM_HOST_OS     \"${VM_HOST_OS}\")

CONFIG_DEFINE (VM_HOST)
CONFIG_DEFINE (VM_HOST_CPU)
CONFIG_DEFINE (VM_HOST_VENDOR)
CONFIG_DEFINE (VM_HOST_OS)

SET (VM_VERSION \"${VM_VERSION}\")
SET (VM_NAME \"Squeak\")
SET (PLATFORM_SOURCE_VERSION \"${PLATFORM_SOURCE_VERSION}\")

CONFIG_DEFINE (VM_VERSION)
CONFIG_DEFINE (VM_NAME)
CONFIG_DEFINE (PLATFORM_SOURCE_VERSION)
CONFIG_DEFINE (SQ_VERSION)

CHECK_FUNCTION_EXISTS (tzset	HAVE_TZSET)
CHECK_VARIABLE_EXISTS (timezone	HAVE_TIMEZONE)
CHECK_STRUCT_HAS_MEMBER ("struct tm" tm_gmtoff time.h HAVE_TM_GMTOFF)

CONFIG_DEFINE (HAVE_TZSET)
CONFIG_DEFINE (HAVE_TIMEZONE)
CONFIG_DEFINE (HAVE_TM_GMTOFF)


CONFIG_DEFINE (IMAGE_DUMP)

