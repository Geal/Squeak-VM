Building Unix Squeak from CVS Sources
-------------------------------------


0.  IMPORTANT!  Vital parts of the source tree are generated from
    within Squeak itself and are NOT present in the CVS sources.  If
    you answer "no" to either of the following:
    
       - do you already have a working, up-to-date Squeak installation?
    
       - have you previously compiled a Squeak VM from source?
    
    then you should download a "ready-made" source tarball (which
    includes the generated parts of the tree) and play with that
    instead.  A ready-made source tarball and full instructions for
    compiling it can be found at:
    
       http://www-sor.inria.fr/~piumarta/squeak/devel.html
    
    The remainder of this document assumes you answered "yes" to both
    of the above questions.

1.  Checkout the sources (duh).
 
        ~$ cvs -d:pserver:anonymous@cvs.sourceforge.net:/cvsroot/squeak login
 
    When prompted for a password leave it blank -- just press <Return>.
 
        ~$ cvs -z3 -d:pserver:anonymous@cvs.sourceforge.net:/cvsroot/squeak co squeak
 
    This will checkout a directory called "squeak".
 
    NOTE: If you receive an error (EOF or "connection reset by peer")
    from the above command then you are suffering from Source Forge's
    totally fascist "bandwidth capping" service.  Wait 15 minutes or
    so then try again.  If the problem persists then you might want to
    consider:

      - sending copious hate emails to the Source Forge admins (but
        NOT to Squeak project admins! ;) and/or

      - fetching a ready-made tarball from a more sociable server that
        will pump bits at you as fast as the Internet permits (see the
        above URL)

    in whichever combination optimises your personal Feel Good Factor.
 
2.  In the "squeak" directory, create a subdirectory called "src" which
    will receive the automatically-generated part of the source tree:
 
        ~$ mkdir squeak/src
 
3.  Fire up your Squeak VM, with the latest image.
 
        ~$ squeak up-to-date.image
 
    Make sure you have the latest VMMaker package installed.  (Grab it
    via SqueakMap.  If you don't know what SqueakMap [or VMMaker] is,
    go back to step 0 and answer "no" to either of the two questions
    [it doesn't matter which]).
 
4.  Open the VMMakerTool.
 
        VMMakerTool openInWorld
 
5.  Make sure the tool identifies
 
        Path to platforms code:      .../squeak/platforms
        Platform name:               unix
        Path to generated sources:   .../squeak/src
 
6.  Select which plugins you want to build.  If in doubt, click on the
    menu button (at the top of the scrollbar) in the "Plugins not
    built" pane and select "make all internal".
 
7.  Hit the "Generate All" button at the top of VMM.
 
8.  Save your configuration and/or image, if you like, then quit your
    Squeak session.

9.  Create a configure script.  (You need autoconf installed to do
    this.  I use version 2.52.  If you have any other version
    installed then you're on your own.)  Descend into the unix
    "config" directory and run "make" to build the script:

        cd squeak/platforms/unix/config
	make

10. From this point on the build instructions are identical to those
    for a "ready-made" source tarball.  Refer to the "README" file in
    this directory for the continuation of this saga.

11. For the impatient:

	cd ../../..		# back to the "squeak" directory
	mkdir build
	cd build
	../platforms/unix/config/configure
	make
	cd ../..		# back to your image directory
	./squeak/build/squeak up-to-date.image


----
Last edited: 2003-08-21 01:48:25 by piumarta on emilia.inria.fr
